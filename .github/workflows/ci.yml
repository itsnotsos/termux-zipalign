name: Build Zipalign Binaries

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Zipalign
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm64-v8a
          - armeabi-v7a
          - i686
          - x86_64

    steps:
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git curl unzip

      - name: Download Android NDK
        run: |
          curl -O https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
          unzip android-ndk-r27c-linux.zip
          export ANDROID_NDK_HOME=$PWD/android-ndk-r27c

      - name: Clone Zipalign Source
        run: |
          git clone https://android.googlesource.com/platform/build.git
          cd build/tools/zipalign

      - name: Build Zipalign for ${{ matrix.arch }}
        run: |
          cd build/tools/zipalign
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          if [[ "${{ matrix.arch }}" == "arm64-v8a" ]]; then
            CC=aarch64-linux-android21-clang
          elif [[ "${{ matrix.arch }}" == "armeabi-v7a" ]]; then
            CC=armv7a-linux-androideabi21-clang
          elif [[ "${{ matrix.arch }}" == "i686" ]]; then
            CC=i686-linux-android21-clang
          elif [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            CC=x86_64-linux-android21-clang
          fi
          SOURCES=$(find . -type f -name "*.cpp")

          # Compile zipalign binary
          $CC -o zipalign $SOURCES -I. -std=c++17
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: zipalign-${{ matrix.arch }}
          path: build/tools/zipalign/zipalign
